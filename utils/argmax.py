import torch

# Your tensor data
data = torch.tensor([[2.5092e-04, 3.6022e-04, 2.9901e-04, 3.1472e-04, 2.3758e-02, 1.7725e-03,
         1.0693e-01, 2.0526e-04, 8.6531e-01, 9.9096e-01, 1.6039e-04, 1.5582e-02,
         2.8522e-04, 9.9902e-01, 5.0054e-04, 5.0141e-04, 1.5991e-02, 1.5988e-04,
         9.9494e-01, 2.4738e-04, 6.7856e-02, 2.5400e-04, 1.8624e-04, 9.9830e-01,
         2.5144e-04, 9.2307e-01, 5.6519e-01, 4.0326e-04, 7.1060e-03, 1.2223e-02,
         3.5353e-01, 1.5027e-03, 6.5275e-04, 4.2734e-03, 1.7355e-04, 9.9764e-01,
         3.3543e-04, 1.7241e-04],
        [1.9559e-04, 4.8034e-04, 1.7711e-04, 2.9571e-01, 4.2514e-02, 1.9419e-03,
         2.9649e-03, 2.0222e-04, 8.2890e-01, 9.9865e-01, 2.1098e-04, 2.1773e-04,
         2.0129e-04, 9.9789e-01, 2.1068e-04, 1.0182e-03, 1.3642e-02, 4.8391e-04,
         7.8269e-01, 3.0817e-04, 5.7477e-03, 2.0937e-04, 1.7129e-02, 9.9833e-01,
         2.1810e-04, 9.3174e-01, 1.2830e-01, 5.6460e-04, 3.4752e-03, 6.7317e-01,
         9.3253e-01, 8.4565e-02, 6.4706e-03, 7.5315e-04, 1.9643e-04, 9.9242e-01,
         3.6368e-04, 1.8573e-04],
        [1.7781e-04, 5.7781e-03, 1.8855e-04, 2.9587e-04, 3.5684e-03, 1.7002e-04,
         3.3303e-02, 1.7260e-04, 9.8555e-01, 9.9349e-01, 1.6623e-04, 9.9306e-04,
         1.7182e-03, 9.9946e-01, 1.7921e-04, 1.0130e-03, 5.7282e-03, 1.0347e-03,
         8.1343e-01, 1.0817e-03, 5.0444e-04, 1.9372e-04, 2.2374e-04, 9.9628e-01,
         1.7402e-04, 8.6156e-01, 4.0334e-01, 2.6647e-04, 1.0482e-03, 7.8594e-03,
         3.1814e-01, 2.6844e-03, 4.1307e-04, 2.0145e-03, 1.7518e-04, 9.9922e-01,
         1.6544e-04, 1.5968e-04],
        [1.8771e-04, 4.5131e-04, 1.4809e-04, 1.1200e-03, 3.0972e-03, 1.9568e-04,
         9.3846e-03, 3.3254e-04, 6.1484e-01, 9.9489e-01, 1.7838e-04, 2.3311e-04,
         5.8033e-03, 9.9926e-01, 1.6586e-04, 8.4812e-04, 1.6583e-03, 1.0402e-03,
         9.9491e-01, 1.5033e-03, 9.4424e-03, 1.6483e-04, 1.5334e-04, 9.9798e-01,
         1.7023e-04, 9.4376e-01, 2.0354e-01, 4.9148e-03, 2.3107e-03, 3.2492e-02,
         5.5876e-01, 2.6369e-04, 2.6889e-03, 6.6285e-04, 7.6733e-04, 9.9895e-01,
         1.9583e-04, 1.6739e-04],
        [2.0460e-04, 1.1056e-03, 9.2176e-03, 1.3231e-02, 7.4847e-04, 1.0132e-03,
         2.0134e-02, 8.0514e-04, 8.5528e-01, 9.9909e-01, 1.7308e-04, 1.4062e-03,
         2.5358e-04, 9.9818e-01, 1.8399e-04, 6.1068e-04, 6.9040e-03, 5.3922e-04,
         4.5787e-01, 2.1394e-04, 1.2914e-02, 2.0807e-03, 1.8789e-04, 9.9617e-01,
         2.3836e-04, 9.3721e-01, 5.7698e-02, 4.3800e-04, 7.1011e-03, 7.7558e-01,
         9.1794e-01, 2.1966e-03, 3.8484e-02, 2.1613e-04, 1.4276e-03, 9.9749e-01,
         2.4237e-04, 1.8098e-04],
        [3.8121e-04, 4.6765e-04, 2.7270e-02, 6.9747e-01, 7.0614e-03, 9.5741e-03,
         4.0250e-04, 1.9474e-04, 6.7085e-01, 9.9902e-01, 1.7055e-04, 1.1148e-03,
         1.5940e-04, 9.9664e-01, 1.4846e-04, 1.7075e-03, 1.8780e-02, 1.4238e-03,
         2.1925e-01, 1.5658e-04, 8.0164e-03, 2.2796e-04, 1.5924e-04, 9.9887e-01,
         4.4977e-04, 6.8122e-01, 1.9400e-01, 1.9010e-04, 2.0534e-01, 8.7214e-01,
         9.7097e-01, 2.5200e-03, 2.3049e-04, 8.5878e-04, 1.7574e-04, 8.7256e-01,
         3.3502e-04, 1.4701e-04],
        [5.2847e-03, 3.2980e-04, 2.0586e-04, 1.6983e-04, 4.6621e-04, 1.6442e-04,
         2.7662e-02, 2.3015e-04, 3.8175e-01, 4.7702e-01, 2.0009e-04, 1.9854e-03,
         2.2593e-03, 9.9688e-01, 1.4556e-03, 2.8354e-04, 1.2608e-03, 1.9119e-04,
         9.9949e-01, 6.1024e-04, 3.7076e-03, 2.2816e-04, 1.7071e-04, 9.9276e-01,
         1.7190e-04, 9.7513e-01, 3.6513e-02, 2.5058e-04, 1.8487e-02, 1.7203e-03,
         2.6857e-01, 1.2283e-03, 8.6405e-03, 3.4673e-03, 1.6070e-04, 9.9936e-01,
         4.1840e-04, 1.5755e-04],
        [5.7518e-04, 9.7646e-04, 3.0137e-04, 1.8283e-03, 9.3064e-03, 2.1277e-03,
         6.2324e-02, 3.0145e-04, 5.9441e-01, 9.9661e-01, 7.3914e-04, 1.3260e-03,
         8.7534e-04, 9.9897e-01, 1.8650e-04, 1.2857e-03, 7.4378e-04, 1.7996e-04,
         9.9200e-01, 2.5201e-04, 5.8541e-03, 8.7224e-04, 1.8110e-04, 9.9832e-01,
         1.8505e-04, 9.4694e-01, 7.2318e-01, 1.4474e-03, 2.8063e-03, 3.0592e-01,
         3.9007e-01, 2.3129e-02, 2.3269e-02, 3.1640e-04, 1.9340e-04, 9.9762e-01,
         4.2807e-04, 1.6144e-04],
        [1.8398e-04, 1.9333e-04, 9.5346e-04, 2.0295e-04, 1.2437e-02, 1.1703e-02,
         2.1351e-02, 2.6771e-04, 6.6026e-01, 9.9776e-01, 1.7580e-04, 2.7103e-03,
         1.7573e-04, 9.9947e-01, 3.0591e-04, 1.9894e-03, 1.8249e-03, 2.5955e-04,
         9.6617e-01, 1.8625e-04, 8.5344e-03, 1.6589e-04, 1.6740e-04, 9.9755e-01,
         1.6900e-04, 8.1887e-01, 2.1791e-01, 5.0195e-04, 9.4012e-02, 1.2345e-01,
         3.3977e-02, 2.3728e-02, 1.6236e-03, 1.3486e-03, 1.7392e-04, 9.9878e-01,
         4.7352e-04, 1.9517e-04],
        [1.7974e-04, 3.8311e-03, 9.1714e-04, 1.7507e-04, 3.7859e-03, 2.2658e-03,
         7.9548e-02, 2.2144e-04, 5.1618e-01, 8.4072e-01, 2.0880e-04, 8.9625e-03,
         2.2114e-04, 9.9933e-01, 2.9821e-04, 1.8294e-04, 1.4295e-03, 1.8890e-04,
         9.9550e-01, 1.5681e-04, 4.9520e-02, 4.9253e-04, 2.0373e-04, 9.9272e-01,
         1.1311e-03, 9.9015e-01, 2.1765e-01, 7.7811e-04, 2.0799e-03, 8.6588e-04,
         1.6856e-02, 6.1525e-03, 3.0726e-03, 2.0993e-03, 1.7317e-04, 9.9935e-01,
         2.1088e-04, 1.7834e-04]])

# Compute the argmax for each row
argmax_indices = torch.argmax(data, dim=1)

print(argmax_indices)